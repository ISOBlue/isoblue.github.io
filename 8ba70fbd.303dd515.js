(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{76:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return b}));var i=n(2),r=n(6),o=(n(0),n(89)),a={id:"swbuild",title:"Build Instructions"},l={unversionedId:"sw/swbuild",id:"sw/swbuild",isDocsHomePage:!1,title:"Build Instructions",description:"Prerequisites",source:"@site/docs/sw/build.md",permalink:"/docs/sw/swbuild",editUrl:"https://github.com/ISOBlue/isoblue.github.io/edit/source/website-v2/docs/sw/build.md",sidebar:"someSidebar",previous:{title:"Hardware Assembly",permalink:"/docs/hw/hwbuild"},next:{title:"Flashing an Image",permalink:"/docs/sw/flashing"}},c=[{value:"Prerequisites",id:"prerequisites",children:[{value:"Machine Requirement",id:"machine-requirement",children:[]},{value:"Preparations",id:"preparations",children:[]},{value:"Source Synchronization",id:"source-synchronization",children:[]},{value:"Editing isoblue.conf",id:"editing-isoblueconf",children:[]}]},{value:"Building",id:"building",children:[]}],u={rightToc:c};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(o.b)("p",null,"The building process for ISOBlue 2.0 is very customizable. If you do not have\nsimilar experience, it is recommended that you read through some of the ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"http://www.yoctoproject.org/docs/2.4.1/mega-manual/mega-manual.html"}),"Yocto\nproject documentations")," to get started. If you do not have much experience in\nLinux, you can still download a ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://drive.google.com/open?id=0B6AeE6Ne4z3aX0VFXzRVWGNSRjQ"}),"prebuilt ISOBlue image")," and follow the\n",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/sw/flashing"}),"flashing instructions")," to get yourself an ISOBlue."),Object(o.b)("h3",{id:"machine-requirement"},"Machine Requirement"),Object(o.b)("p",null,"For building an ISOBlue image, a powerful, multi-core host machine is highly\nrecommended. There should be a minimum of 60GB of free disk place, 4GB of RAM\nand a decent Internet connection. The build procedure is currently only tested\non Ubuntu 16.10."),Object(o.b)("h3",{id:"preparations"},"Preparations"),Object(o.b)("p",null,"ISOBlue's image (which added a bunch of custom recipes on top of Toradex BSP)\nbuild requires some additional packages, mainly 32-bit flashing utilities. You\nneed to do:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),"sudo dpkg --add-architecture i386\nsudo apt-get update\nsudo apt-get install g++-5-multilib\nsudo apt-get install curl dosfstools gawk g++-multilib gcc-multilib lib32z1-dev \\\nlibcrypto++9v5:i386 libcrypto++-dev:i386 liblzo2-dev:i386 lzop libsdl1.2-dev \\\nlibstdc++-5-dev:i386 libusb-1.0-0:i386 libusb-1.0-0-dev:i386 uuid-dev:i386 \\\ntexinfo chrpath\n\ncd /usr/lib; sudo ln -s libcrypto++.so.9.0.0 libcryptopp.so.6\n")),Object(o.b)("p",null,"We would also need to install ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://source.android.com/setup/using-repo"}),"repo")," for source synchronizations:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),"sudo apt-get install repo\n")),Object(o.b)("h3",{id:"source-synchronization"},"Source Synchronization"),Object(o.b)("p",null,"You need to simply do:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),"mkdir isoblue-core\ncd isoblue-core\nrepo init -u https://github.com/ISOBlue/isoblue-image -b v2.7\nrepo sync\n")),Object(o.b)("p",null,"After getting the ISOBlue image source, you can do:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),". export\n")),Object(o.b)("p",null,"After sourcing ",Object(o.b)("inlineCode",{parentName:"p"},"export"),", you will be put into the ",Object(o.b)("inlineCode",{parentName:"p"},"build")," directory with the\nfollowing items configured for the ",Object(o.b)("strong",{parentName:"p"},"current")," session:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"bitbake executable"),Object(o.b)("li",{parentName:"ul"},"shell environment variables")),Object(o.b)("p",null,"You will need to source ",Object(o.b)("inlineCode",{parentName:"p"},"export")," again to have the right configurations."),Object(o.b)("h3",{id:"editing-isoblueconf"},"Editing isoblue.conf"),Object(o.b)("p",null,"Before building the image, edit ",Object(o.b)("inlineCode",{parentName:"p"},"isoblue.conf")," under ",Object(o.b)("inlineCode",{parentName:"p"},"top-level-directory"),",\ni.e., ",Object(o.b)("inlineCode",{parentName:"p"},"isoblue-core")," in our instruction:"),Object(o.b)("p",null,"The settings you need to change is the ",Object(o.b)("inlineCode",{parentName:"p"},"ID")," and ",Object(o.b)("inlineCode",{parentName:"p"},"MACHINEID"),"."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"For ",Object(o.b)("inlineCode",{parentName:"li"},"ID"),", you can use any combination from 011 to 999 and this will be your\nISOBlue's unique ",Object(o.b)("inlineCode",{parentName:"li"},"ID")," (000 to 010 are already taken). This is only a temporary\nsolution and will get changed in the future."),Object(o.b)("li",{parentName:"ul"},"For ",Object(o.b)("inlineCode",{parentName:"li"},"MACHINEID"),", you can append a string of your choice to the configured ",Object(o.b)("inlineCode",{parentName:"li"},"ID"),".\nThe string can only contain letters. The default string is ",Object(o.b)("inlineCode",{parentName:"li"},"ib"),".")),Object(o.b)("h2",{id:"building"},"Building"),Object(o.b)("p",null,"Given that you are in the ",Object(o.b)("inlineCode",{parentName:"p"},"build")," directory, run:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),"bitbake -r ../isoblue.conf console-isoblue-image\n")),Object(o.b)("p",null,"This command reads in the configuration you set in the ",Object(o.b)("inlineCode",{parentName:"p"},"isoblue.conf")," earlier\nand use the settings to build an image. This first build usually takes of hours\n(it involves a lot of downloading and compiling). ",Object(o.b)("strong",{parentName:"p"},"Be patient!")),Object(o.b)("p",null,"After a successful build, you should have the following\ndirectory structure for for your ",Object(o.b)("inlineCode",{parentName:"p"},"deploy")," directory:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{}),"isoblue-oe\n\u2514\u2500\u2500 deploy\n\u2502   \u2514\u2500\u2500 images\n\u2502       \u2514\u2500\u2500 apalis-imx6\n\u2502   \u2514\u2500\u2500 ipk\n\u2502   \u2514\u2500\u2500 licenses\n")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"apalis-imx6")," is the processor ISOBlue 2.0 is using. The image should be located\nin the ",Object(o.b)("inlineCode",{parentName:"p"},"apalis-imx6")," folder. The image file we are looking for should be in the\nformat of ",Object(o.b)("inlineCode",{parentName:"p"},"Isoblue2_apalis-imx6_image_2.7b2-YYYYMMDD.tar.bz2"),". Copy this file\nto a directory of your choice and follow the ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/sw/flashing"}),"flashing instructions"),"\nto load the image onto your hardware."))}b.isMDXComponent=!0},89:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var i=n(0),r=n.n(i);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=r.a.createContext({}),b=function(e){var t=r.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=b(e.components);return r.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=b(n),d=i,m=s["".concat(a,".").concat(d)]||s[d]||p[d]||o;return n?r.a.createElement(m,l(l({ref:t},u),{},{components:n})):r.a.createElement(m,l({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=n[u];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);