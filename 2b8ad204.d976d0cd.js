(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{65:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(6),o=(a(0),a(89)),s={id:"read",title:"How to Read Data"},i={unversionedId:"data/read",id:"data/read",isDocsHomePage:!1,title:"How to Read Data",description:"This tutorial assumes you are running Linux and know your way around it.",source:"@site/docs/data/data.md",permalink:"/docs/data/read",editUrl:"https://github.com/ISOBlue/isoblue.github.io/edit/source/website-v2/docs/data/data.md",sidebar:"someSidebar",previous:{title:"Public Data",permalink:"/docs/data/data"}},l=[{value:"Prerequisites",id:"prerequisites",children:[{value:"Install the Java Run Time Envrionment (JRE)",id:"install-the-java-run-time-envrionment-jre",children:[]},{value:"Install python libraries and dependencies",id:"install-python-libraries-and-dependencies",children:[]},{value:"Download and setup system path for Kafka",id:"download-and-setup-system-path-for-kafka",children:[]},{value:"Download custom scripts and schemas",id:"download-custom-scripts-and-schemas",children:[]},{value:"Have your data ready",id:"have-your-data-ready",children:[]}]},{value:"Setup a zookeeper and a Kafka broker",id:"setup-a-zookeeper-and-a-kafka-broker",children:[]},{value:"Consume Kafka messages",id:"consume-kafka-messages",children:[{value:"Consume CAN messages",id:"consume-can-messages",children:[]},{value:"Consume GPS messages",id:"consume-gps-messages",children:[]}]},{value:"Stop zookeeper and broker",id:"stop-zookeeper-and-broker",children:[]}],c={rightToc:l};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This tutorial assumes you are running Linux and know your way around it."),Object(o.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(o.b)("h3",{id:"install-the-java-run-time-envrionment-jre"},"Install the Java Run Time Envrionment (JRE)"),Object(o.b)("p",null,"For installing the JRE, please consult ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://medium.com/coderscorner/installing-oracle-java-8-in-ubuntu-16-10-845507b13343"}),"this webpage")," as it provides an easy,\nstep-by-step process to install JRE."),Object(o.b)("p",null,"To verify the JRE has been installed correctly, run:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"java -version\n")),Object(o.b)("p",null,"This should output something along the line with these:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),'java version "1.8.0_181"\nJava(TM) SE Runtime Environment (build 1.8.0_181-b13)\nJava HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode)\n')),Object(o.b)("h3",{id:"install-python-libraries-and-dependencies"},"Install python libraries and dependencies"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Note:")," we are still using python2 based dependencies. Therefore, make sure\nwhen you run ",Object(o.b)("inlineCode",{parentName:"p"},"pip"),", you are using python2 as your default python and install the\ncorresponding python2 dependencies."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Install kafka-python")),Object(o.b)("p",null,Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://pypi.org/project/kafka-python/"}),"kafka-python")," is the python client for Apache Kafka. For the consumer\nscripts we wrote, it uses the library's ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://kafka-python.readthedocs.io/en/master/apidoc/KafkaConsumer.html"}),"KafkaConsumer")," to consume the\nmessage from a broker. To install, run:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"pip install kafka-python\n")),Object(o.b)("p",null,"To verify the library has been installed correctly, start python shell and run:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"from kafka import KafkaConsumer\n")),Object(o.b)("p",null,"If no error pops up, that means the library is all set."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Install avro")),Object(o.b)("p",null,"We use ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://avro.apache.org/docs/1.8.1/index.html"}),"Apache Avro")," for packing our data into binary format using schemas\nwe defined for CAN, GPS and other messages. To install avro, please follow the\n",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://avro.apache.org/docs/1.8.1/gettingstartedpython.html"}),"tutorial")," from the official webpage."),Object(o.b)("p",null,"To verify the library has been installed correctly, run this in a python\nshell:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"import avro\n")),Object(o.b)("p",null,"This should not raise any error if the library is installed correctly."),Object(o.b)("h3",{id:"download-and-setup-system-path-for-kafka"},"Download and setup system path for Kafka"),Object(o.b)("p",null,"We are using an older version of Apache Kafka. It can be downloaded from ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"http://cloudradio39.ecn.purdue.edu/kafka_2.11-0.10.1.0.tar.gz"}),"this\nlink"),"."),Object(o.b)("p",null,"After download is complete, extract the content into a directory of your\nchoice. The directory will have ",Object(o.b)("inlineCode",{parentName:"p"},"bin")," that has all the executables and ",Object(o.b)("inlineCode",{parentName:"p"},"config"),"\nthat contains all the configuration files for the executables."),Object(o.b)("p",null,"We need to add the needed executables into system path. To do so, add\nthis line to the end of your ",Object(o.b)("inlineCode",{parentName:"p"},"~/.profile"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"export PATH=/somewhere/on/your/filesystem/kafka_2.11-0.10.1.0/bin:$PATH\n")),Object(o.b)("p",null,"Save and exit and do:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"source ~/.profile\n")),Object(o.b)("p",null,"Then this path will be added to your system path ",Object(o.b)("strong",{parentName:"p"},"ONLY")," for this terminal\nsession. To make this permanent, you have to log back out and in again."),Object(o.b)("p",null,"Make sure you have these executables in your path:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"zookeeper-server-start.sh")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"kafka-server-start.sh")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"kafka-server-stop.sh")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"zookeeper-server-stop.sh"))),Object(o.b)("h3",{id:"download-custom-scripts-and-schemas"},"Download custom scripts and schemas"),Object(o.b)("p",null,"First off, download the custom scripts from ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"http://cloudradio39.ecn.purdue.edu/scripts_and_schemas.tar.gz"}),"here")," and extract the contents.\nLet's go through the contents one by one."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"kafka_preps.sh"))),Object(o.b)("p",null,"This script starts off an instance of zookeeper and a Kafka broker. There are\nseveral variables to specify for it to run correctly. The specifications will\nbe discussed in the ",Object(o.b)("em",{parentName:"p"},"Setup a zookeeper and a Kafka broker")," section."),Object(o.b)("ol",{start:2},Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"kafka_stop.sh"))),Object(o.b)("p",null,"You can use this script to stop the zookeeper and the broker instance you\ncreated."),Object(o.b)("ol",{start:3},Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"kafka_can_consumer.py")," and ",Object(o.b)("inlineCode",{parentName:"li"},"kafka_gps_consumer.py"))),Object(o.b)("p",null,"These two scripts use the ",Object(o.b)("inlineCode",{parentName:"p"},"python-kafka")," and the ",Object(o.b)("inlineCode",{parentName:"p"},"avro")," library you just\ninstalled. One consumes the CAN messages and the other consumes the gps\nmessages from the broker you set up. The details on how to use these two scripts\nwill be discussed in later sections."),Object(o.b)("ol",{start:4},Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"schema")," directory")),Object(o.b)("p",null,"This directory contains the avro schemas we defined for different message types."),Object(o.b)("h3",{id:"have-your-data-ready"},"Have your data ready"),Object(o.b)("p",null,"You can transfer the ",Object(o.b)("inlineCode",{parentName:"p"},"kafka-logs")," directory from your ISOBlue 2.0 device to a\nlocal directory of your choice. Alternatively, you can download some ",Object(o.b)("inlineCode",{parentName:"p"},"kafka-logs"),"\nfrom the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/data/data"}),"Public Data")," section from this site to test."),Object(o.b)("h2",{id:"setup-a-zookeeper-and-a-kafka-broker"},"Setup a zookeeper and a Kafka broker"),Object(o.b)("p",null,"For this part, you will need the ",Object(o.b)("inlineCode",{parentName:"p"},"kafka_preps.sh")," script."),Object(o.b)("p",null,"There are two parameters you need to change in this script."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"cfgdir"))),Object(o.b)("p",null,"This directory specifies the configuration files directory for the zookeeper and\nthe broker. It usually should be changed to a absolute path of where you put you\nextracted the Kafka directory."),Object(o.b)("ol",{start:2},Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"kflogdir"))),Object(o.b)("p",null,"This directory should contain the absolute path that point to whereever you\nstore your ",Object(o.b)("inlineCode",{parentName:"p"},"kafka-logs")," directory."),Object(o.b)("p",null,"After these two parameters are set, run this in your terminal:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"./kafka_preps.sh\n")),Object(o.b)("p",null,"If no error pop up, then an instance of a zookeeper and a broker should be up."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Be default, the Kafka broker will roll over the current loaded logs after\na retention period of 7 days (168 hours). There are various retention\nconfiguration you can set to tailor your retention needs. For example, if you\nset ",Object(o.b)("inlineCode",{parentName:"p"},"log.retention.hours=1")," to have Kafka delete your current logs and start\nover fresh everytime an hour has passed. For different parameters for changing\nthe default retention policy, please consult the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://kafka.apache.org/documentation/#brokerconfigs"}),"Kafka broker configs"),".")),Object(o.b)("h2",{id:"consume-kafka-messages"},"Consume Kafka messages"),Object(o.b)("p",null,"Once you have the zookeeper and broker up, we can start consuming messages from\nthem. ",Object(o.b)("strong",{parentName:"p"},"Make sure")," the ",Object(o.b)("inlineCode",{parentName:"p"},"schema")," directory is in the same directory as where\nthe scripts reside."),Object(o.b)("h3",{id:"consume-can-messages"},"Consume CAN messages"),Object(o.b)("p",null,"To consume the CAN messages, you will use the ",Object(o.b)("inlineCode",{parentName:"p"},"kafka_can_consumer.py")," script.\nYou will need to specify a ",Object(o.b)("inlineCode",{parentName:"p"},"topic")," and an ",Object(o.b)("inlineCode",{parentName:"p"},"auto_offset_reset")," parameter. The\navailable ",Object(o.b)("inlineCode",{parentName:"p"},"topic"),"s for consuming CAN messages are:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"tra")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"imp"))),Object(o.b)("p",null,"And the available ",Object(o.b)("inlineCode",{parentName:"p"},"auto_offset_reset")," parameters are:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"earliest")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"latest"))),Object(o.b)("p",null,"For consuming the CAN messages from the start of the tractor bus log, you will\nrun:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"./kafka_can_consumer.py -t tra -a earliest\n")),Object(o.b)("p",null,"Or simply:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"./kafka_can_consumer.py -t tra\n")),Object(o.b)("p",null,"As the script defaults to consume from the beginning of the log from a given\ntopic."),Object(o.b)("p",null,"The script will then output the consumed logs that has timestamp, pgn, and the\ndata payload bytes and these fields are space-separated."),Object(o.b)("p",null,"You can use ",Object(o.b)("inlineCode",{parentName:"p"},">")," to redirect the script output to a file, i.e.:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"./kafka_can_consumer.py -t tra > tra.log\n")),Object(o.b)("p",null,"The script will exit once it consumes all the messages."),Object(o.b)("h3",{id:"consume-gps-messages"},"Consume GPS messages"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"kafka_gps_consumer.py")," is not written as rigorous as\n",Object(o.b)("inlineCode",{parentName:"p"},"kafka_can_consumer.py"),". The topic is set to ",Object(o.b)("inlineCode",{parentName:"p"},"gps")," and the ",Object(o.b)("inlineCode",{parentName:"p"},"auto_offset_reset"),"\nparameter is already set to ",Object(o.b)("inlineCode",{parentName:"p"},"earliest")," in the script. To consume the GPS\nmessages and store them in a file, just run:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"./kafka_gps_consumer.py > gps.log\n")),Object(o.b)("h2",{id:"stop-zookeeper-and-broker"},"Stop zookeeper and broker"),Object(o.b)("p",null,"After you think you are done using the zookeeper and broker, you can start them\nby running the custom script:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"./kafka_stop.sh\n")))}p.isMDXComponent=!0},89:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return h}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},b=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=p(a),d=n,h=b["".concat(s,".").concat(d)]||b[d]||u[d]||o;return a?r.a.createElement(h,i(i({ref:t},c),{},{components:a})):r.a.createElement(h,i({ref:t},c))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var c=2;c<o;c++)s[c]=a[c];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);